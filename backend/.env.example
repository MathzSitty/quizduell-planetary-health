# Backend Configuration for local development WITHOUT Docker
# Copy this file to backend/.env and customize as needed if you are running the backend
# directly (e.g., via `npm run dev` in the backend directory) and NOT using docker-compose.
# When running with Docker, most of these are set via the `environment` section
# in `docker-compose.yml` (which in turn should load them from the main .env file).

# Database connection string
# Adjust if your local PostgreSQL instance runs differently.
DATABASE_URL="postgresql://postgres:postgres@localhost:5432/quizduell_db?schema=public"

# JWT Configuration
# IMPORTANT: Use a strong, unique secret. This is a fallback for local dev only.
JWT_SECRET="a_very_secure_random_string_for_jwt_for_local_dev_only_replace_this"
JWT_EXPIRES_IN="7d"

# Server Port for the backend API
PORT=5001

# Frontend URL (used for CORS configuration and in email links like password reset)
FRONTEND_URL="http://localhost:3000"

# Node Environment (development, production, test)
NODE_ENV="development"

# Initial Admin User credentials for Prisma seed (if run locally without Docker)
# These are used by the Prisma seed script if it's run in an environment where these
# variables are not already set (e.g., local development without Docker setting them).
INITIAL_ADMIN_EMAIL="admin-local@example.com"
INITIAL_ADMIN_PASSWORD="YOUR_STRONG_PASSWORD_FOR_LOCAL_DEV_ADMIN_REPLACE_THIS"
INITIAL_ADMIN_NAME="Local Admin"
INITIAL_ADMIN_UNIHANDLE="LocalUni"

# Email Configuration (e.g., for password reset functionality)
# Replace with your actual email service provider details or use Ethereal for testing.
EMAIL_FROM="noreply@local-planetary-health-quiz.example.com"
# Example for Ethereal (for testing password reset emails locally):
# EMAIL_HOST="smtp.ethereal.email"
# EMAIL_PORT=587
# EMAIL_SECURE=false # Ethereal uses STARTTLS
# EMAIL_USER="your_ethereal_username" # Get from Ethereal account
# EMAIL_PASS="your_ethereal_password" # Get from Ethereal account