# quizduell-planetary-health/.env.example
# Dies ist eine Vorlagedatei. Kopiere sie zu .env und fülle die Werte aus.
# Die .env Datei sollte NICHT in die Versionskontrolle committet werden.

# Node Environment: 'development' oder 'production'
NODE_ENV=development

# PostgreSQL Settings
# Wähle einen Benutzernamen, ein sicheres Passwort und einen Datenbanknamen.
POSTGRES_DB_USER=quizappuser
POSTGRES_DB_PASSWORD=replace_with_a_strong_password
POSTGRES_DB_NAME=quizduell_app_db
# Optional: Wenn du den PostgreSQL-Port auf deinem Host-System ändern möchtest (Standard ist 5432)
# POSTGRES_HOST_PORT=5432

# Backend Settings
BACKEND_PORT=5001
# WICHTIG: Ersetze dies durch ein langes, zufälliges und sicheres Secret (mind. 32 Zeichen)!
JWT_SECRET="replace_this_with_your_actual_strong_jwt_secret_key"
JWT_EXPIRES_IN=7d

# Initial Admin User (wird vom Seed-Skript im Backend verwendet, wenn der Container startet)
# Ändere diese Werte, besonders das Passwort!
INITIAL_ADMIN_EMAIL=admin@example.com
INITIAL_ADMIN_PASSWORD=ReplaceWithStrongAdminPassword123!
INITIAL_ADMIN_NAME="Quiz Administrator"
INITIAL_ADMIN_UNIHANDLE="UniAdmin"

# Frontend Settings
FRONTEND_PORT=3000
# Die URL, unter der das Frontend vom Browser aus erreichbar ist.
# Diese wird vom Backend für CORS und ggf. andere Zwecke verwendet.
FRONTEND_APP_URL=http://localhost:3000

# Die folgenden URLs werden in den Frontend-Build "gebacken".
# Sie müssen vom Browser des Benutzers aus erreichbar sein.
# Für lokale Docker-Entwicklung zeigen sie auf localhost und den Backend-Port.
FRONTEND_NEXT_PUBLIC_API_URL=http://localhost:5001/api
FRONTEND_NEXT_PUBLIC_SOCKET_URL=http://localhost:5001